
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0BBC40253FBA5A259FC19AA8C21CD817'
    
_lr_action_items = {'class':([0,2,4,22,],[3,3,3,-74,]),'$end':([1,2,4,5,6,8,22,],[0,-1,-1,-75,-73,-72,-74,]),'ID':([3,10,12,17,19,20,21,23,36,37,38,39,40,41,43,45,47,56,64,66,73,74,75,76,77,78,82,83,85,86,88,92,98,99,100,101,108,109,116,120,130,134,138,139,141,149,],[7,13,14,14,25,26,58,14,58,26,26,70,26,26,26,26,26,89,26,26,26,26,26,26,26,26,26,26,26,26,115,58,26,26,26,127,-55,26,131,26,26,26,127,147,-62,26,]),'inherits':([7,],[10,]),'LKEY':([7,9,11,13,20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,131,134,149,],[-1,12,-71,-70,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'RKEY':([12,15,17,18,23,24,43,62,79,81,108,109,129,141,],[-1,22,-1,-69,-1,-68,-1,-67,108,-57,-55,-1,-56,-62,]),'TWOPOINTS':([14,58,90,127,],[19,19,116,139,]),'ASS':([14,25,58,147,],[20,64,20,149,]),'LPAREN':([14,20,26,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,115,120,130,134,149,],[21,47,66,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,130,47,47,47,47,]),'SEMI':([16,25,26,27,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,63,65,70,71,80,84,94,102,103,104,105,106,107,108,110,111,112,113,114,118,122,136,137,142,148,],[23,-1,-4,-66,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,-65,-64,-12,-23,109,-32,-63,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,-9,-24,-8,-13,]),'let':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'if':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'while':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'new':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'isvoid':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'case':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'COMPADOS':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,98,99,100,109,120,130,134,149,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'INTEGER':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'STRING':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'TRUE':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FALSE':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ARROBA':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'POINT':([20,37,38,40,41,43,45,47,54,55,57,64,66,73,74,75,76,77,78,81,82,83,85,86,89,97,98,99,100,109,114,120,130,134,149,],[-1,-1,-1,-1,-1,-1,-1,-1,88,-20,-22,-1,-1,-1,-1,-1,-1,-1,-1,-22,-1,-1,-1,-1,-21,-22,-1,-1,-1,-1,-19,-1,-1,-1,-1,]),'RPAREN':([21,25,26,27,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,59,60,61,63,65,66,70,71,84,87,91,92,93,94,95,96,97,102,103,104,105,106,107,108,110,111,112,113,114,117,118,119,120,121,122,130,132,136,137,140,142,148,],[-1,-1,-4,-66,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,90,-1,-61,-65,-64,-1,-12,-23,-32,114,-60,-1,-59,-63,118,-1,-16,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-58,-14,-15,-1,-18,-7,-1,-17,-9,-24,148,-8,-13,]),'COMMA':([25,26,27,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,60,63,65,70,71,84,94,96,102,103,104,105,106,107,108,110,111,112,113,114,118,122,136,137,142,148,],[-1,-4,-66,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,92,-65,-64,-12,-23,-32,-63,120,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,-9,-24,-8,-13,]),'in':([25,26,27,28,29,30,31,32,33,34,35,36,42,44,46,48,49,50,51,52,53,60,61,63,65,67,70,71,84,91,92,93,94,102,103,104,105,106,107,108,110,111,112,113,114,117,118,122,136,137,142,148,],[-1,-4,-66,-47,-48,-49,-50,-51,-52,-53,-54,-1,-46,-33,-38,-34,-35,-2,-3,-5,-6,-1,-61,-65,-64,98,-12,-23,-32,-60,-1,-59,-63,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-58,-14,-7,-9,-24,-8,-13,]),'TIMES':([26,46,48,49,50,51,52,53,118,148,],[-4,85,-34,-35,-2,-3,-5,-6,-14,-13,]),'DIVIDE':([26,46,48,49,50,51,52,53,118,148,],[-4,86,-34,-35,-2,-3,-5,-6,-14,-13,]),'PLUS':([26,44,46,48,49,50,51,52,53,112,113,114,118,148,],[-4,82,-38,-34,-35,-2,-3,-5,-6,-36,-37,-39,-14,-13,]),'MINUS':([26,44,46,48,49,50,51,52,53,112,113,114,118,148,],[-4,83,-38,-34,-35,-2,-3,-5,-6,-36,-37,-39,-14,-13,]),'LT':([26,42,44,46,48,49,50,51,52,53,84,110,111,112,113,114,118,148,],[-4,73,-33,-38,-34,-35,-2,-3,-5,-6,-32,-30,-31,-36,-37,-39,-14,-13,]),'LE':([26,42,44,46,48,49,50,51,52,53,84,110,111,112,113,114,118,148,],[-4,74,-33,-38,-34,-35,-2,-3,-5,-6,-32,-30,-31,-36,-37,-39,-14,-13,]),'GT':([26,42,44,46,48,49,50,51,52,53,84,110,111,112,113,114,118,148,],[-4,75,-33,-38,-34,-35,-2,-3,-5,-6,-32,-30,-31,-36,-37,-39,-14,-13,]),'GE':([26,42,44,46,48,49,50,51,52,53,84,110,111,112,113,114,118,148,],[-4,76,-33,-38,-34,-35,-2,-3,-5,-6,-32,-30,-31,-36,-37,-39,-14,-13,]),'EQUALS':([26,42,44,46,48,49,50,51,52,53,84,110,111,112,113,114,118,148,],[-4,77,-33,-38,-34,-35,-2,-3,-5,-6,-32,-30,-31,-36,-37,-39,-14,-13,]),'ISNE':([26,42,44,46,48,49,50,51,52,53,84,110,111,112,113,114,118,148,],[-4,78,-33,-38,-34,-35,-2,-3,-5,-6,-32,-30,-31,-36,-37,-39,-14,-13,]),'then':([26,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,68,70,71,84,102,103,104,105,106,107,108,110,111,112,113,114,118,122,136,137,142,148,],[-4,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,99,-12,-23,-32,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,-9,-24,-8,-13,]),'loop':([26,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,69,70,71,84,102,103,104,105,106,107,108,110,111,112,113,114,118,122,136,137,142,148,],[-4,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,100,-12,-23,-32,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,-9,-24,-8,-13,]),'of':([26,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,70,71,72,84,102,103,104,105,106,107,108,110,111,112,113,114,118,122,136,137,142,148,],[-4,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,-12,-23,101,-32,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,-9,-24,-8,-13,]),'else':([26,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,70,71,84,102,103,104,105,106,107,108,110,111,112,113,114,118,122,123,136,137,142,148,],[-4,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,-12,-23,-32,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,134,-9,-24,-8,-13,]),'fi':([26,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,70,71,84,102,103,104,105,106,107,108,110,111,112,113,114,118,122,123,133,135,136,137,142,143,148,],[-4,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,-12,-23,-32,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,-1,142,-11,-9,-24,-8,-10,-13,]),'pool':([26,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,70,71,84,102,103,104,105,106,107,108,110,111,112,113,114,118,122,124,136,137,142,148,],[-4,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,-12,-23,-32,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,136,-9,-24,-8,-13,]),'NEWLINE':([26,28,29,30,31,32,33,34,35,42,44,46,48,49,50,51,52,53,70,71,84,101,102,103,104,105,106,107,108,110,111,112,113,114,118,122,126,128,136,137,138,142,146,148,150,],[-4,-47,-48,-49,-50,-51,-52,-53,-54,-46,-33,-38,-34,-35,-2,-3,-5,-6,-12,-23,-32,-1,-40,-41,-42,-43,-44,-45,-55,-30,-31,-36,-37,-39,-14,-7,138,-27,-9,-24,-1,-8,-27,-13,-26,]),'esac':([125,138,144,145,146,],[137,-1,-25,-28,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'clax':([0,2,4,],[2,4,4,]),'claxes':([2,4,],[5,8,]),'empty':([2,4,7,12,17,20,21,23,25,36,37,38,40,41,43,45,47,60,64,66,73,74,75,76,77,78,82,83,85,86,92,96,98,99,100,101,109,120,123,130,134,138,149,],[6,6,11,18,18,57,61,18,65,61,57,57,57,57,81,57,57,93,57,97,57,57,57,57,57,57,57,57,57,57,61,121,57,57,57,128,81,97,135,97,57,146,57,]),'inheritc':([7,],[9,]),'body':([12,17,23,],[15,24,62,]),'assignement':([12,17,21,23,36,92,],[16,16,60,16,60,60,]),'method':([12,17,23,],[17,17,17,]),'expression':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[27,68,69,71,72,80,87,94,96,122,123,124,80,96,96,143,150,]),'letc':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ifc':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'whilec':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'newc':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'isvoidc':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'casec':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,134,149,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'logicalexp':([20,37,38,40,41,43,47,64,66,73,74,75,76,77,78,98,99,100,109,120,130,134,149,],[34,34,34,34,34,34,34,34,34,102,103,104,105,106,107,34,34,34,34,34,34,34,34,]),'block':([20,37,38,40,41,43,47,64,66,98,99,100,109,120,130,131,134,149,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,141,35,35,]),'aritmethicexp':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,98,99,100,109,120,130,134,149,],[42,42,42,42,42,42,84,42,42,42,42,42,42,42,42,42,110,111,42,42,42,42,42,42,42,42,]),'highpriority':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,112,113,44,44,44,44,44,44,44,44,]),'endpriority':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'constant':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'callmethods':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'whocalls':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'father':([20,37,38,40,41,43,45,47,64,66,73,74,75,76,77,78,82,83,85,86,98,99,100,109,120,130,134,149,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'params':([21,36,92,],[59,67,117,]),'value':([25,],[63,]),'nextexpression':([43,109,],[79,129,]),'nextparam':([60,],[91,]),'paramsexpr':([66,120,130,],[95,132,140,]),'nextparamexpr':([96,],[119,]),'caseparams':([101,138,],[125,145,]),'casebranch':([101,138,],[126,126,]),'elsec':([123,],[133,]),'nextcasebranch':([138,],[144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','coolparser.py',10),
  ('constant -> INTEGER','constant',1,'p_constant','coolparser.py',13),
  ('constant -> STRING','constant',1,'p_constant','coolparser.py',14),
  ('constant -> ID','constant',1,'p_constant','coolparser.py',15),
  ('constant -> TRUE','constant',1,'p_constant','coolparser.py',16),
  ('constant -> FALSE','constant',1,'p_constant','coolparser.py',17),
  ('letc -> let params in expression','letc',4,'p_letc','coolparser.py',22),
  ('ifc -> if expression then expression elsec fi','ifc',6,'p_ifc','coolparser.py',26),
  ('whilec -> while expression loop expression pool','whilec',5,'p_whilec','coolparser.py',30),
  ('elsec -> else expression','elsec',2,'p_elsec','coolparser.py',34),
  ('elsec -> empty','elsec',1,'p_elsec','coolparser.py',35),
  ('newc -> new ID','newc',2,'p_newc','coolparser.py',42),
  ('callmethods -> whocalls POINT ID LPAREN paramsexpr RPAREN','callmethods',6,'p_callmethods','coolparser.py',46),
  ('callmethods -> ID LPAREN paramsexpr RPAREN','callmethods',4,'p_callmethods','coolparser.py',47),
  ('paramsexpr -> expression nextparamexpr','paramsexpr',2,'p_paramsexpr','coolparser.py',54),
  ('paramsexpr -> empty','paramsexpr',1,'p_paramsexpr','coolparser.py',55),
  ('nextparamexpr -> COMMA paramsexpr','nextparamexpr',2,'p_nextparamexpr','coolparser.py',64),
  ('nextparamexpr -> empty','nextparamexpr',1,'p_nextparamexpr','coolparser.py',65),
  ('whocalls -> LPAREN expression RPAREN','whocalls',3,'p_whocalls','coolparser.py',72),
  ('whocalls -> father','whocalls',1,'p_whocalls','coolparser.py',73),
  ('father -> ARROBA ID','father',2,'p_father','coolparser.py',80),
  ('father -> empty','father',1,'p_father','coolparser.py',81),
  ('isvoidc -> isvoid expression','isvoidc',2,'p_isvoidc','coolparser.py',89),
  ('casec -> case expression of caseparams esac','casec',5,'p_casec','coolparser.py',93),
  ('caseparams -> casebranch NEWLINE nextcasebranch','caseparams',3,'p_caseparams','coolparser.py',97),
  ('casebranch -> ID TWOPOINTS ID ASS expression','casebranch',5,'p_casebranch','coolparser.py',101),
  ('casebranch -> empty','casebranch',1,'p_casebranch','coolparser.py',102),
  ('nextcasebranch -> caseparams','nextcasebranch',1,'p_nextcasebranch','coolparser.py',109),
  ('nextcasebranch -> empty','nextcasebranch',1,'p_nextcasebranch','coolparser.py',110),
  ('aritmethicexp -> highpriority PLUS aritmethicexp','aritmethicexp',3,'p_aritmethicexp','coolparser.py',117),
  ('aritmethicexp -> highpriority MINUS aritmethicexp','aritmethicexp',3,'p_aritmethicexp','coolparser.py',118),
  ('aritmethicexp -> COMPADOS aritmethicexp','aritmethicexp',2,'p_aritmethicexp','coolparser.py',119),
  ('aritmethicexp -> highpriority','aritmethicexp',1,'p_aritmethicexp','coolparser.py',120),
  ('endpriority -> constant','endpriority',1,'p_endpriority','coolparser.py',127),
  ('endpriority -> callmethods','endpriority',1,'p_endpriority','coolparser.py',128),
  ('highpriority -> endpriority TIMES highpriority','highpriority',3,'p_highpriority','coolparser.py',132),
  ('highpriority -> endpriority DIVIDE highpriority','highpriority',3,'p_highpriority','coolparser.py',133),
  ('highpriority -> endpriority','highpriority',1,'p_highpriority','coolparser.py',134),
  ('highpriority -> LPAREN expression RPAREN','highpriority',3,'p_highpriority','coolparser.py',135),
  ('logicalexp -> aritmethicexp LT logicalexp','logicalexp',3,'p_logicalexp','coolparser.py',144),
  ('logicalexp -> aritmethicexp LE logicalexp','logicalexp',3,'p_logicalexp','coolparser.py',145),
  ('logicalexp -> aritmethicexp GT logicalexp','logicalexp',3,'p_logicalexp','coolparser.py',146),
  ('logicalexp -> aritmethicexp GE logicalexp','logicalexp',3,'p_logicalexp','coolparser.py',147),
  ('logicalexp -> aritmethicexp EQUALS logicalexp','logicalexp',3,'p_logicalexp','coolparser.py',148),
  ('logicalexp -> aritmethicexp ISNE logicalexp','logicalexp',3,'p_logicalexp','coolparser.py',149),
  ('logicalexp -> aritmethicexp','logicalexp',1,'p_logicalexp','coolparser.py',150),
  ('expression -> letc','expression',1,'p_expression','coolparser.py',158),
  ('expression -> ifc','expression',1,'p_expression','coolparser.py',159),
  ('expression -> whilec','expression',1,'p_expression','coolparser.py',160),
  ('expression -> newc','expression',1,'p_expression','coolparser.py',161),
  ('expression -> isvoidc','expression',1,'p_expression','coolparser.py',162),
  ('expression -> casec','expression',1,'p_expression','coolparser.py',163),
  ('expression -> logicalexp','expression',1,'p_expression','coolparser.py',164),
  ('expression -> block','expression',1,'p_expression','coolparser.py',165),
  ('block -> LKEY nextexpression RKEY','block',3,'p_block','coolparser.py',169),
  ('nextexpression -> expression SEMI nextexpression','nextexpression',3,'p_nextexpression','coolparser.py',173),
  ('nextexpression -> empty','nextexpression',1,'p_nextexpression','coolparser.py',174),
  ('nextparam -> COMMA params','nextparam',2,'p_nextparam','coolparser.py',183),
  ('nextparam -> empty','nextparam',1,'p_nextparam','coolparser.py',184),
  ('params -> assignement nextparam','params',2,'p_params','coolparser.py',191),
  ('params -> empty','params',1,'p_params','coolparser.py',192),
  ('method -> ID LPAREN params RPAREN TWOPOINTS ID block','method',7,'p_method','coolparser.py',201),
  ('value -> ASS expression','value',2,'p_value','coolparser.py',205),
  ('value -> empty','value',1,'p_value','coolparser.py',206),
  ('assignement -> ID TWOPOINTS ID value','assignement',4,'p_assignement','coolparser.py',213),
  ('assignement -> ID ASS expression','assignement',3,'p_assignement','coolparser.py',214),
  ('body -> assignement SEMI body','body',3,'p_body','coolparser.py',221),
  ('body -> method body','body',2,'p_body','coolparser.py',222),
  ('body -> empty','body',1,'p_body','coolparser.py',223),
  ('inheritc -> inherits ID','inheritc',2,'p_inheritc','coolparser.py',232),
  ('inheritc -> empty','inheritc',1,'p_inheritc','coolparser.py',233),
  ('claxes -> clax claxes','claxes',2,'p_claxes','coolparser.py',240),
  ('claxes -> empty','claxes',1,'p_claxes','coolparser.py',241),
  ('clax -> class ID inheritc LKEY body RKEY','clax',6,'p_clax','coolparser.py',248),
  ('program -> clax claxes','program',2,'p_program','coolparser.py',252),
]
